"use strict";(()=>{var e={};e.id=229,e.ids=[229],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6320:(e,r,i)=>{i.r(r),i.d(r,{originalPathname:()=>f,patchFetch:()=>g,requestAsyncStorage:()=>l,routeModule:()=>c,serverHooks:()=>m,staticGenerationAsyncStorage:()=>h});var t={};i.r(t),i.d(t,{POST:()=>u,dynamic:()=>d});var s=i(921),p=i(7380),o=i(4185),a=i(3878),n=i(9382);let d="force-dynamic";async function u(e,{params:r}){try{for(let e of(await n._.shoppingItem.findMany({where:{shoppingListId:r.id},include:{prices:!0}})))for(let r of e.prices){var i;let e=(i=r.price,Math.round(i*(1+(20*Math.random()-10)/100)*100)/100);await n._.itemPrice.update({where:{id:r.id},data:{price:e,lastUpdated:new Date}})}return a.NextResponse.json({success:!0})}catch(e){return console.error("Error refreshing prices:",e),a.NextResponse.json({error:"Failed to refresh prices"},{status:500})}}let c=new s.AppRouteRouteModule({definition:{kind:p.x.APP_ROUTE,page:"/api/shopping-lists/[id]/refresh-prices/route",pathname:"/api/shopping-lists/[id]/refresh-prices",filename:"route",bundlePath:"app/api/shopping-lists/[id]/refresh-prices/route"},resolvedPagePath:"/home/ubuntu/grocery_price_comparison/app/app/api/shopping-lists/[id]/refresh-prices/route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:l,staticGenerationAsyncStorage:h,serverHooks:m}=c,f="/api/shopping-lists/[id]/refresh-prices/route";function g(){return(0,o.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:h})}},9382:(e,r,i)=>{i.d(r,{_:()=>s});let t=require("@prisma/client"),s=global.prisma||new t.PrismaClient({log:["query"]})}};var r=require("../../../../../webpack-runtime.js");r.C(e);var i=e=>r(r.s=e),t=r.X(0,[923,146],()=>i(6320));module.exports=t})();